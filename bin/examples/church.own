(* the church-1000 test stolen from AndrasKovacs's elaboration zoo *)

def Nat : Type = (N : Type) → (N → N) → N → N;
def five : Nat = λN s z . s (s (s (s (s z))));

def add : Nat → Nat → Nat =
    λa b N s z . a N s (b N s z);
def mul : Nat → Nat → Nat =
    λa b N s z . a N (b N s) z;

def ten : Nat = add five five;
def thous : Nat = mul ten hundo;

#exec thous;
#exec mul ten;
#exec mul ten five;

(*
OUTPUT

λN : Type . λs : (N → N) . λz : N . s s s s s s s s s s s s ..... s s s z
(trust me I counted, it actually gives 1000 s's.)

*)