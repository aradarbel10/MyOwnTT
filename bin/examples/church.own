(* the church-1000 test stolen from AndrasKovacs's elaboration zoo *)

let Nat : Type = (N : Type) → (N → N) → N → N in
let five : Nat = λN s z . s (s (s (s (s z)))) in

let add : Nat → Nat → Nat =
    λa b N s z . a N s (b N s z) in
let mul : Nat → Nat → Nat =
    λa b N s z . a N (b N s) z in

let ten : Nat = add five five in
let hundo : Nat = mul ten ten in
let thous : Nat = mul ten hundo in

thous

(*
OUTPUT

λN : Type . λs : (N → N) . λz : N . s s s s s s s s s s s s ..... s s s z
(trust me I counted, it actually gives 1000 s's.)

*)